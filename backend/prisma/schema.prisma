// Prisma schema for Simply QR

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String   // bcrypt hashed
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  qrCodes   QRCode[] // Relation to QR codes

  @@index([email])
  @@index([username])
}

// QR Code model
model QRCode {
  id          String   @id @default(uuid())
  userId      String

  // QR Code details
  name        String   @db.VarChar(255)  // User-friendly name
  url         String   @db.Text          // Target URL
  qrCodeData  String   @db.Text          // Generated QR code image (base64 or URL)
  shortCode   String   @unique           // Short code for tracking URL

  // Customization options
  backgroundColor String @default("#ffffff")
  foregroundColor String @default("#000000")
  size            Int    @default(300)

  // Analytics
  scanCount   Int      @default(0)
  lastScanned DateTime?

  // Metadata
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  scans       Scan[]   // Relation to scan analytics

  @@index([userId])
  @@index([shortCode])
  @@index([createdAt])
}

// Scan analytics model
model Scan {
  id         String   @id @default(uuid())
  qrCodeId   String

  // Scan details
  scannedAt  DateTime @default(now())
  ipAddress  String?  @db.VarChar(45)  // IPv4 or IPv6
  userAgent  String?  @db.Text
  country    String?  @db.VarChar(100)
  city       String?  @db.VarChar(100)
  referer    String?  @db.Text

  // Relations
  qrCode     QRCode   @relation(fields: [qrCodeId], references: [id], onDelete: Cascade)

  @@index([qrCodeId])
  @@index([scannedAt])
}
